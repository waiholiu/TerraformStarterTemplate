# Terraform .gitignore

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*tfplan*

# IMPORTANT: Keep .terraform.lock.hcl in version control
# This file should be committed to ensure consistent provider versions
# .terraform.lock.hcl

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Azure specific
.azure/

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Log files
*.log

# Temporary files
*.tmp
*.temp

# Backup files
*.bak
*.backup

# Environment files (uncomment if you want to ignore them)
# .env
# variables.env

# SSH keys
*.pem
*.key
id_rsa*

# Azure CLI cache
.azure-cli/

# PowerShell modules
PSGetModuleInfo.xml
